#include "OneWireHub.h"     // Library to emulate a Maxim OneWire slave, see https://github.com/orgua/OneWireHub
#include "DS2433.h"         // DS2433 4096 bits EEPROM
#include "RemoteReceiver.h" // RWS-371 compatible 433 MHz receiver, see https://github.com/chrisandreae/RemoteReceiver

constexpr uint8_t pin_onewire   { 8 };  // Arduino pin connected to OneWire databus
constexpr uint8_t pin_led       { 13 }; // LED that flashes when a signal of an open mailbox is detected
constexpr uint32_t mail_received_code { 882377 }; // Code generated by radiotransmitter that we should listen after
constexpr uint32_t mail_detect_cooldown { 10000 }; // Don't signal new mail unless this much time has expired (in miliseconds)

auto hub    = OneWireHub(pin_onewire);
auto ds2433 = DS2433( DS2433::family_code, 0x00, 0x0D, 0x02, 0x04, 0x01, 0xEA );    // Make up a unique OneWire address not already used in your network.
uint32_t mail_counter = 0;
uint8_t mail_output[4];
uint32_t radio_data_received = 0;
uint32_t mail_detect_time = 0;
uint32_t current_time = millis();
String statusText;

void setup() {
  Serial.begin(115200);
  Serial.println("OneWire-Hub emulating DS2433 for mailbox status reading. Address: 000D020401EA");

  pinMode(pin_led, OUTPUT);

  // Flash LED three times to show that we are ready.
  digitalWrite(pin_led, LOW);
  delay(1000);
  digitalWrite(pin_led, HIGH);
  delay(1000);
  digitalWrite(pin_led, LOW);
  delay(1000);
  digitalWrite(pin_led, HIGH);
  delay(1000);
  digitalWrite(pin_led, LOW);
  delay(1000);
  digitalWrite(pin_led, HIGH);

  // Setup OneWire
  hub.attach(ds2433);
  ds2433.clearMemory();

  // Setup radio receiver
  RemoteReceiver::start(0); // library use interrupt #0 (pin 2),see http://playground.arduino.cc/Code/Interrupts

  Serial.println("setup done");
}

void loop() {

  // following function must be called periodically!
  hub.poll();

  current_time = millis();
    
  if (current_time > mail_detect_time + mail_detect_cooldown) {
    digitalWrite(pin_led, HIGH); // Turn LED off.
  }

  // Have we recived new data from radio receiver?
  if (RemoteReceiver::dataReady()) {
    radio_data_received = RemoteReceiver::getData();
    //Serial.println("Read data from radio: " + radio_data_received);

    // Check if received data matches the code we are looking for AND more time than the "mail_detect_cooldown" has expired.
    if (radio_data_received == mail_received_code && current_time > mail_detect_time + mail_detect_cooldown) {
      mail_detect_time = current_time;
      
      digitalWrite(pin_led, LOW); // Turn LED on.
      mail_counter = mail_counter + 1;

      memcpy(mail_output, &mail_counter, sizeof(mail_counter)); // copy 32-bit counter to four 8-bit values.
      ds2433.writeMemory(mail_output, sizeof(mail_output), 0);
      
      statusText = "New mail has arrived! ";
      statusText += mail_counter;
      statusText += " so far.";
      Serial.println(statusText);
    }
  }
}
